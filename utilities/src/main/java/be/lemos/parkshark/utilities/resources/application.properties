server.port = 8080

# Show a log for each sql query
spring.jpa.show-sql = true

# platform and dialect
spring.datasource.platform=oracle
spring.jpa.database-platform = org.hibernate.dialect.Oracle10gDialect

# Datasource properties
# Obviously, this user should exist on your local oracle xe
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=PARKSHARK
spring.datasource.password=parkshark

# By setting these options to the specified values,
# we ensure spring uses the schema-${platform}.sql and data-${platform}.sql files
# to generate the initial schema and data
# (see spring.datasource.platform for platform)
#spring.jpa.hibernate.ddl-auto=none
#spring.datasource.initialization-mode = always

# Creating a table that already exists throws an exception in Oracle
# Dropping a table that not exists throws an exception in Oracle
# Checking if a table exists in Oracle (before Dropping) is very cumbersome in Oracle
# Therefore, we simply ignore the exception that can occur when we try to create a table that already exists
spring.datasource.continue-on-error = true